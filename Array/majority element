class Solution {

    public int majorityElement(int[] nums) {
        int n = nums.length;
        int cand=0;
        int cnt=0;

        for(int i=0; i<n; i++){
            if(cnt==0){
                cnt=1;
                cand=0;
                cand = nums[i];
            } else if(cand==nums[i]){
                cnt++;

            } else cnt--;
        }

        int cnt1=0;
        for (int i=0; i<n; i++){
            if (nums[i] == cand){
                cnt1++;
            }
        }

        if (cnt1 > (n/2)) {
            return cand;
        }
        return -1;
    }



    //     HashMap<Integer, Integer> mpp = new HashMap<>();
 
    //     for (int i=0; i<n; i++){
    //         int val = mpp.getOrDefault(nums[i],0);
    //         mpp.put(nums[i], val+1);
    //     }

    //     for (Map.Entry<Integer, Integer> it : mpp.entrySet()){
    //         if (it.getValue() > (n/2)){
    //             return it.getKey();
    //         }
    //     }
    //     return -1;
    // }
    

}
